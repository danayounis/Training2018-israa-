package gaza.tawjehi;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.Hashtable;

public class Gaza_Tawjehi {

 static HashMap< String,Integer> school = new HashMap< String,Integer>();
 static HashMap< String,Integer> Mohafatha = new HashMap< String,Integer>();
  static HashMap< String,Integer> Master = new HashMap< String,Integer>();
 static ArrayList <student> Student = new ArrayList<student> ();
 static ArrayList <student> list = new ArrayList<student> (); 
 
    public static void main(String[] args) throws SQLException {
        
       try {
 Reader reader = new InputStreamReader(new FileInputStream("gazacsv.csv"), "CP1256");
    BufferedReader br = new BufferedReader(reader);
    String line;
    
    while ((line = br.readLine()) != null) {
               
                String[] country = line.split(",");
                String year = country [0];
                int iyear = Integer.parseInt(year);	
                String RegNo = country [1];
                String Name = country [2];
//String father = country [3];
                String city =country [4];
//String family=country [5];
                String school = country [6];
                String master =country [7];
//String subject= country [8];
                String avg = country [10];
                System.out.println(avg);
                float favg = Float.parseFloat(avg);
                
    Student.add(new student(iyear,RegNo,Name,favg,0,0,0,1));
    list.add(new student(RegNo,school,city,master));
    }
    reader.close();
    ;
    
	    } 
	    catch (UnsupportedEncodingException e) 
	    {
			System.out.println(e.getMessage());
	    } 
	    catch (IOException e) 
	    {
			System.out.println(e.getMessage());
	    }
	    catch (Exception e)
	    {
			System.out.println(e.getMessage());
	    }
       
        
     
       
     
     Connection connection = null;  
     ResultSet resultSet1 = null; 
     ResultSet resultSet2 = null;  
     ResultSet resultSet3 = null;  
     Statement statement = null; 
     try 
     {  
         Class.forName("org.sqlite.JDBC");  
         
         connection = DriverManager.getConnection("jdbc:sqlite:C:\\Users\\dell\\Desktop\\ œ—Ì»\\Task#1setdata\\sqlite\\Tawjehi-2017.db"); 
         System.out.println("connect");
         statement = connection.createStatement();  
          
            
        
     } 
     catch (Exception e) 
     {  
         e.printStackTrace();  
     }
      try
{
  connection.setAutoCommit(false);
   String sql1 ="SELECT Id, Name from School";
   resultSet1  = statement.executeQuery(sql1);
   
       while (resultSet1.next()) {
           int id =resultSet1.getInt("Id");
           String name = resultSet1.getString("Name");
           school.put(name, id);
            }
       String sql2 ="SELECT Id, Name from Master";
   resultSet2  = statement.executeQuery(sql2);
   
       while (resultSet2.next()) {
           int id =resultSet2.getInt("Id");
           String name = resultSet2.getString("Name");
           Master.put(name, id);
            }
       String sql3 ="SELECT Id, Name from Mohafatha";
   resultSet3 = statement.executeQuery(sql3);
   
       while (resultSet3.next()) {
           int id =resultSet3.getInt("Id");
           String name = resultSet3.getString("Name");
           Mohafatha.put(name, id);
            }
       
for(int i=0;i<list.size();i++){
    String school1=list.get(i).getSchoolname();
    if(!school.containsKey(school1)){
        int s =school.size()+1;
        school.put(school1,s);
        String dana = "insert into School('Id', 'Name') values('"+ s +
                     "','"+ school1 +"')";
        statement.executeUpdate(dana);
    }
    int idsc =school.get(school1);
    Student.get(i).setSchoolId(idsc);
       String Mohafatha1=list.get(i).getMohafathaname();
    if(!Mohafatha.containsKey(Mohafatha1)){
        int k =Mohafatha.size()+1;
        Mohafatha.put(Mohafatha1,k);
        String dana = "insert into Mohafatha('Id', 'Name') values('"+ k +
                     "','"+ Mohafatha1 +"')";
        statement.executeUpdate(dana);
       
    }
   int idmo =Mohafatha.get(Mohafatha1);
   System.out.println(idmo);
    Student.get(i).setMohafathaId(idmo);
       
 String Master1=list.get(i).getMastername();
    if(!Master.containsKey(Master1)){
        int k =Master.size()+1;
        Master.put(Master1,k);
        String dana = "insert into Master('Id', 'Name') values('"+ k +
                     "','"+ Master1 +"')";
        statement.executeUpdate(dana);
    }
   int idma =Master.get(Master1);
   Student.get(i).setMasterId(idma);
       

   String dana = "insert into student('Year', 'RegNo', 'Name', 'Avg','SchoolId','MohafathaId','MasterId','IsWestBank') values('"+ Student.get(i).getyear() +
   "','"+ Student.get(i).getRegNo() + "','"+ Student.get(i).getName()+ "','"+Student.get(i).getavg() +"','"+ Student.get(i).getSchoolId()+"','"+ Student.get(i).getMohafathaId() + "','"+ Student.get(i).getMasterId() + "','"+ Student.get(i).getIsWestBank()+"')";
     statement.executeUpdate(dana);
}
   
  

   connection.commit();
}
catch(Exception e)
{
   connection.rollback();
}
finally
{
   connection.close();
}
      
	}
}

class student {
    private int  year;
    private String  RegNo;
    private String  Name;
    private float  avg;
    private int SchoolId;
    private String Schoolname;
    private int  MohafathaId;
    private String Mohafathaname;
    private int  MasterId;
    private String Mastername;
    private int  IsWestBank;
   
    
    public student(int year,String RegNo,String Name,float avg,int SchoolId,int MohafathaId,int MasterId,int  IsWestBank){
        this.year = year;
        this.RegNo = RegNo;
        this.Name = Name ;
        this.avg  = avg;
        this.SchoolId =SchoolId;
        this.MohafathaId  =MohafathaId;
        this.MasterId =MasterId;
        this.IsWestBank =IsWestBank;
       
    }
    public student(String RegNo,String Schoolname,String Mohafathaname,String Mastername){
        
        this.RegNo = RegNo;
        this.Schoolname = Schoolname ;
        this.Mohafathaname = Mohafathaname ;
        this.Mastername = Mastername ;
       
    }
    
    public String getRegNo() {
        return RegNo;
    }
    public int getyear() {
        return year;
    }
     public String getName() {
        return Name;
    }
    public float getavg() {
        return avg;
    }
       public int getSchoolId() {
        return SchoolId;
    }
    public int getMohafathaId() {
        return MohafathaId;
    }
     public int getMasterId() {
        return MasterId;
    }
    public int getIsWestBank() {
        return IsWestBank;
    }
    public String getSchoolname() {
        return Schoolname;
    }
     public String getMohafathaname() {
        return Mohafathaname;
    }
    public String getMastername() {
        return Mastername;
    }
    
     public void setSchoolId(int SchoolId) {
        this.SchoolId = SchoolId;
    }
      public void setMohafathaId(int MohafathaId) {
        this.MohafathaId= MohafathaId;
    }
       public void setMasterId(int MasterId) {
        this.MasterId= MasterId;
    }
     
    
}